//Pascal's Triangle II 

//Given an index k, return the kth row of the Pascal's triangle.

//For example, given k = 3,
//Return [1,3,3,1].

//Note:
//Could you optimize your algorithm to use only O(k) extra space?

public class Solution {
    public ArrayList<Integer> getRow(int rowIndex) {
        ArrayList<Integer> curr = new ArrayList<Integer>(rowIndex+1);
        if(rowIndex<0) return curr;
        for(int i=0;i<=rowIndex;i++){
            curr.add(0);
        }
        curr.set(0,1);
        for(int i=1;i<=rowIndex;i++){
            curr.set(i,1);
            for(int j=i-1;j>0;j--){
                curr.set(j,curr.get(j)+curr.get(j-1));
            }
        }
        return curr;
    }
}
