//Rotate List 

//Given a list, rotate the list to the right by k places, where k is non-negative.

//For example:
//Given 1->2->3->4->5->NULL and k = 2,
//return 4->5->1->2->3->NULL.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null) return null;
        ListNode fast = head;
        ListNode slow = head;
        int i=0;
        while(fast!=null&&i<k) {
            fast=fast.next;
            i++;
        }
        if(fast==null){
            k%=i;
            fast=head;
            i=0;
            while(fast!=null&&i<k) {
                fast=fast.next;
                i++;
            }
        }
        while(fast.next!=null){
            slow=slow.next;
            fast=fast.next;
        }
        fast.next=head;
        ListNode newHead = slow.next;
        slow.next = null;
        return newHead;
    }
}
