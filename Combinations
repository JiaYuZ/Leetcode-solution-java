//Combinations

//Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

//For example,
//If n = 4 and k = 2, a solution is:

//[
//  [2,4],
//  [3,4],
//  [2,3],
//  [1,2],
//  [1,3],
//  [1,4],
//]

public class Solution {
    public ArrayList<ArrayList<Integer>> combine(int n, int k) {
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        if(n<k) return res;
        helper(res,new ArrayList<Integer>(),1,n,k);
        return res;
    }
    
    public void helper(ArrayList<ArrayList<Integer>> res, ArrayList<Integer> item, int s, int n, int k){
        if (item.size()==k){
            res.add(new ArrayList<Integer>(item));
            return;
        }
        for(int i=s;i<=n;i++){
            item.add(i);
            helper(res,item,i+1,n,k);
            item.remove(item.size()-1);
        }
    }
}
