//Happy Number

//Write an algorithm to determine if a number is "happy".

//A happy number is a number defined by the following process: Starting with any positive integer, replace the number 
//by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or 
//it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy 
//numbers.

//Example: 19 is a happy number

//12 + 92 = 82
//82 + 22 = 68
//62 + 82 = 100
//12 + 02 + 02 = 1

public class Solution {
    public boolean isHappy(int n) {
        HashSet<Integer> num = new HashSet<Integer>();
        while(!num.contains(n)){
            num.add(n);
            n=sum(getDegits(n));
            if(n==1) return true;
        }
        return false;
    }
    public int sum(int[] array){
        int sum=0;
        for(int i:array){
        sum=sum+i*i;
        }
        return sum;
    }
    public int[] getDegits(int n){
        String s = String.valueOf(n);
        int[] array=new int[s.length()];
        int i =0;
        while(n>0){
            int m=n%10;
            n=n/10;
            array[i]=m;
            i++;
        }
        return array;
    }
}
