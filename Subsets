//Subsets

//Given a set of distinct integers, nums, return all possible subsets.

//Note:
//Elements in a subset must be in non-descending order.
//The solution set must not contain duplicate subsets.
//For example,
//If nums = [1,2,3], a solution is:

//[
//  [3],
//  [1],
//  [2],
//  [1,2,3],
//  [1,3],
//  [2,3],
//  [1,2],
//  []
//]

public class Solution {
    public ArrayList<ArrayList<Integer>> subsets(int[] nums) {
        if(nums==null) return null;
        Arrays.sort(nums);
        return helper(nums,nums.length-1);
    }
    public ArrayList<ArrayList<Integer>> helper(int[] nums,int l){
        if(l==-1){
            ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
            ArrayList<Integer> item = new ArrayList<Integer>();
            res.add(item);
            return res;
        }
        ArrayList<ArrayList<Integer>> res = helper(nums,l-1);
        int size=res.size();
        for(int i=0;i<size;i++){
            ArrayList<Integer> item=new ArrayList<Integer>(res.get(i));
            item.add(nums[l]);
            res.add(item);
        }
        return res;
    }
}
