//Binary Tree Inorder Traversal

//Given a binary tree, return the inorder traversal of its nodes' values.

//For example:
//Given binary tree {1,#,2,3},
//   1
//    \
//     2
//    /
//   3
//return [1,3,2].

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<Integer> inorderTraversal(TreeNode root) {
        Stack<TreeNode> stack = new Stack<TreeNode>();
        ArrayList<Integer> res = new ArrayList<Integer>();
        TreeNode curr = root;
        while(curr!=null||!stack.empty()){
            while(curr!=null){
                stack.add(curr);
                curr=curr.left;
            }
            curr=stack.peek();
            stack.pop();
            res.add(curr.val);
            curr=curr.right;
        }
        return res;
    }
}
