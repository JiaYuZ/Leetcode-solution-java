//Add Two Numbers 

//You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of 
//their nodes contain a single digit. Add the two numbers and return it as a linked list.

//Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
//Output: 7 -> 0 -> 8

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummyHead = new ListNode(0);
        ListNode p=l1,q=l2,curr=dummyHead;
        int carry=0;
        while(p!=null||q!=null){
            int x = p!=null?p.val:0;
            int y = q!=null?q.val:0;
            int z = x+y+carry;
            carry = z/10;
            curr.next = new ListNode(z%10);
            if(p!=null) p=p.next;
            if(q!=null) q=q.next;
            curr=curr.next;
        }
        if(carry>0) curr.next=new ListNode(carry);
        
        return dummyHead.next;
    }
}
