//Generate Parentheses 

//Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

//For example, given n = 3, a solution set is:

//"((()))", "(()())", "(())()", "()(())", "()()()"


public class Solution {
    public ArrayList<String> generateParenthesis(int n){
        ArrayList<String> res = new ArrayList<String>();
        if(n<0) return res;
        int size=n*2;
        StringBuffer pair=new StringBuffer();
        for(int i=0;i<size;i++){
            pair.append(" ");
        } 
        add(res,pair,n,n,size);
        return res;
    }
    void add(ArrayList<String> res,StringBuffer pair,int l,int r,int size){
        if(l==0&&r==0) {
            res.add(pair.toString());
            return;
        }
        if(l>0){
            pair.setCharAt(size-l-r,'(');
            add(res,pair,l-1,r,size);
        }
        if(r>l){
            pair.setCharAt(size-l-r,')');
            add(res,pair,l,r-1,size);
        }
    }
}
