//Min Stack

//Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.

//push(x) -- Push element x onto stack.
//pop() -- Removes the element on top of the stack.
//top() -- Get the top element.
//getMin() -- Retrieve the minimum element in the stack.

class MinStack {
    private Stack<Integer> s = new Stack<Integer>();
    private Stack<Integer> min = new Stack<Integer>();
    
    public void push(int x) {
        if(min.isEmpty()||x<=min.peek()) 
            min.push(x);
        s.push(x);
        
    }

    public void pop() {
        if(min.peek().equals(s.peek())) 
            min.pop();
        s.pop();
        
    }

    public int top() {
        return s.peek();
    }

    public int getMin() {
        return min.peek();
    }
}
