//Binary Tree Postorder Traversal 

//Given a binary tree, return the postorder traversal of its nodes' values.

//For example:
//Given binary tree {1,#,2,3},
//   1
//    \
//     2
//    /
//   3
//return [3,2,1].

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<Integer> postorderTraversal(TreeNode root) {
        ArrayList<Integer> res = new ArrayList<Integer>();
        TreeNode p = root,q;
        Stack<TreeNode> stack = new Stack<TreeNode>();
        do{
            while(p!=null){
                stack.add(p);
                p=p.left;
            }
            q=null;
            while(!stack.empty()){
                p=stack.peek();
                stack.pop();
                if(p.right == q){
                    res.add(p.val);
                    q=p;
                } else {
                    stack.add(p);
                    p=p.right;
                    break;
                }
            }
        } while (!stack.empty());
        
        return res;   
    }
}
